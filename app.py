# -*- coding: utf-8 -*-
"""emma.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15YsDsyz4O2f8ZRb0WDs_4iQUYaPpnzvj
"""
from flask import Flask, request, render_template_string, redirect, url_for
import pandas as pd
import spacy
from spacy.cli import download
import os

app = Flask(__name__)

# Verifica se o modelo jÃ¡ foi baixado
model_name = "pt_core_news_md"
try:
    nlp = spacy.load(model_name)
except OSError:
    download(model_name)
    nlp = spacy.load(model_name)

# Caminho do arquivo no servidor
file_path = 'teste 1.xlsx'

# Verifica se o arquivo existe
if os.path.exists(file_path):
    # Carregar a planilha Excel
    df = pd.read_excel(file_path)
else:
    df = pd.DataFrame(columns=["Palavras chaves", "TÃ­tulo do documento", "Link Qualyteam", "Resumo"])

# Emoji de rosto humano
face_emoji = "ğŸ˜Š"

# Inicializa o histÃ³rico de chat como uma lista vazia
chat_history = []

def search_in_spreadsheet(term):
    results = df[df['Palavras chaves'].str.contains(term, case=False, na=False)]
    if not results.empty:
        return results[['TÃ­tulo do documento', 'Link Qualyteam', 'Resumo']].to_dict('records')
    else:
        return []

@app.route('/', methods=['GET', 'POST'])
def home():
    global chat_history  # Acessa a variÃ¡vel global chat_history

    if request.method == 'POST':
        user_input = request.form['user_input']

        # Verifica se o usuÃ¡rio digitou algo
        if not user_input.strip():
            chat_history.append("ğŸ¤– Emabot: Por favor, digite uma palavra-chave.")
            return render_template_string(render_chat_template(), chat_history=chat_history)
        
        # Substitui o texto do usuÃ¡rio pelo emoji de rosto humano
        user_message = f"{face_emoji}: {user_input}"
        chat_history.append(user_message)  # Adiciona a interaÃ§Ã£o atual ao histÃ³rico

        # Verifica se o usuÃ¡rio digitou mais de uma palavra
        if len(user_input.split()) > 1:
            chat_history.append("ğŸ¤– Emabot: SÃ³ consigo realizar a busca por palavra-chave.")
            return render_template_string(render_chat_template(), chat_history=chat_history)

        results = search_in_spreadsheet(user_input)
        if results:
            chat_history.append("ğŸ¤– Emabot: Documentos encontrados:")
            for result in results:
                chat_history.append(f"ğŸ“„ <a href='/get_link?title={result['TÃ­tulo do documento']}'> {result['TÃ­tulo do documento']}</a>")
        else:
            chat_history.append("ğŸ¤– Emabot: Nenhum documento encontrado com essas palavras-chave.")
        
    return render_template_string(render_chat_template(), chat_history=chat_history)

@app.route('/get_link', methods=['GET'])
def get_link():
    global chat_history  # Certifique-se de que o histÃ³rico de chat seja acessÃ­vel
    title = request.args.get('title')
    result = df[df['TÃ­tulo do documento'] == title]
    if not result.empty:
        link = result['Link Qualyteam'].values[0]
        resumo = result['Resumo'].values[0] if 'Resumo' in result else "Nenhum resumo disponÃ­vel."
        chat_history.append(f"ğŸ¤– Emabot: Aqui estÃ¡ o link para '{title}': <a href='{link}' target='_blank'>{link}</a>")
        chat_history.append(f"ğŸ“„ Resumo: {resumo}")
    else:
        chat_history.append("ğŸ¤– Emabot: Link nÃ£o encontrado para o tÃ­tulo selecionado.")
    
    return redirect(url_for('home'))

def render_chat_template():
    return '''
        <h1>Emabot da Diplan</h1>
        <div style="border:1px solid #ccc; padding:10px; margin-bottom:10px;">
            {% for message in chat_history %}
                <p>{{ message | safe }}</p>
            {% endfor %}
        </div>
        <form method="post" action="/">
            <label for="user_input">Digite sua mensagem:</label><br>
            <input type="text" id="user_input" name="user_input" style="width:80%">
            <input type="submit" value="Enviar">
        </form>
    '''

if __name__ == "__main__":
    # Inicializa a conversa com a nova saudaÃ§Ã£o
    chat_history = ["ğŸ¤– Emabot: OlÃ¡, me chamo Emaboot da Diplan. Sou sua assistente de busca de documentos. Como posso ajudar? Fale comigo somente por palavras-chave. Exemplo: Processos.."]
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
