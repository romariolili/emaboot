# -*- coding: utf-8 -*-
"""emma.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15YsDsyz4O2f8ZRb0WDs_4iQUYaPpnzvj
"""
from flask import Flask, request, render_template_string, session
import pandas as pd
import os

app = Flask(__name__)
app.secret_key = 'supersecretkey'  # Chave secreta para o gerenciamento da sess√£o

# Caminho do arquivo no servidor
file_path = 'teste 1.xlsx'

# Verifica se o arquivo existe
if os.path.exists(file_path):
    # Carregar a planilha Excel
    df = pd.read_excel(file_path)
else:
    df = pd.DataFrame(columns=["Palavras chaves", "T√≠tulo do documento", "Link Qualyteam"])

# Emoji de rosto humano
face_emoji = "üë§"

def search_in_spreadsheet(term):
    results = df[df['Palavras chaves'].str.contains(term, case=False, na=False)]
    if not results.empty:
        return results[['T√≠tulo do documento', 'Link Qualyteam']].to_dict('records')
    else:
        return []

@app.route('/', methods=['GET', 'POST'])
def home():
    # Inicializa ou reseta o hist√≥rico de chat na sess√£o
    if 'chat_history' not in session or request.method == 'GET':
        session['chat_history'] = ["ü§ñ Emabot: Ol√°, eu sou a Emabot da Diplan. Sou seu assistente de busca... Como posso ajudar?"]
    
    if request.method == 'POST':
        user_input = request.form['user_input']
        
        # Substitui o texto do usu√°rio pelo emoji de rosto humano
        user_message = f"{face_emoji}: {user_input}"
        session['chat_history'].append(user_message)  # Adiciona a intera√ß√£o atual ao hist√≥rico
        
        results = search_in_spreadsheet(user_input)
        if results:
            session['chat_history'].append("ü§ñ Emabot: Documentos encontrados:")
            for result in results:
                session['chat_history'].append(f"üìÑ <a href='/get_link?title={result['T√≠tulo do documento']}'> {result['T√≠tulo do documento']}</a>")
        else:
            session['chat_history'].append("ü§ñ Emabot: Nenhum documento encontrado com essas palavras-chave.")
    
    return render_template_string('''
        <div style="text-align:center;">
            <img src="{{ url_for('static', filename='images/DIPLAN.png') }}" alt="DIPLAN Logo" style="width: 200px;">
            <h1>Emabot da Diplan</h1>
            <p><b>ü§ñ Emabot:</b> Ol√°, eu sou a Emabot da Diplan. Sou seu assistente de busca... Como posso ajudar?</p>
        </div>
        <div style="border:1px solid #ccc; padding:10px; margin-bottom:10px;">
            {% for message in session['chat_history'] %}
                <p>{{ message | safe }}</p>
            {% endfor %}
        </div>
        <form method="post" action="/">
            <label for="user_input">Digite sua mensagem:</label><br>
            <input type="text" id="user_input" name="user_input" style="width:80%">
            <input type="submit" value="Enviar">
        </form>
    ''')

@app.route('/get_link', methods=['GET'])
def get_link():
    title = request.args.get('title')
    result = df[df['T√≠tulo do documento'] == title]
    if not result.empty:
        link = result['Link Qualyteam'].values[0]
        session['chat_history'].append(f"ü§ñ Emabot: Aqui est√° o link para '{title}': <a href='{link}' target='_blank'>{link}</a>")
    else:
        session['chat_history'].append("ü§ñ Emabot: Link n√£o encontrado para o t√≠tulo selecionado.")
    
    # Renderiza a mesma p√°gina inicial para permitir novas intera√ß√µes
    return home()

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

