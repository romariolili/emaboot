# -*- coding: utf-8 -*-
"""emma.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15YsDsyz4O2f8ZRb0WDs_4iQUYaPpnzvj
"""
from flask import Flask, request, render_template_string, redirect, url_for
import pandas as pd
import os

app = Flask(__name__)

# Caminho do arquivo no servidor
file_path = 'teste 1.xlsx'

# Verifica se o arquivo existe
if os.path.exists(file_path):
    # Carregar a planilha Excel
    df = pd.read_excel(file_path)
else:
    df = pd.DataFrame(columns=["Palavras chaves", "TÃ­tulo do documento", "Link Qualyteam"])

# Emoji de rosto humano
face_emoji = "ðŸ˜Š"

# VariÃ¡veis globais para armazenar nome e setor
user_name = ""
user_sector = ""

def search_in_spreadsheet(term):
    results = df[df['Palavras chaves'].str.contains(term, case=False, na=False)]
    if not results.empty:
        return results[['TÃ­tulo do documento', 'Link Qualyteam', 'Resumo']].to_dict('records')
    else:
        return []

@app.route('/', methods=['GET', 'POST'])
def home():
    global chat_history, user_name, user_sector  # Acessa as variÃ¡veis globais

    # Inicializa o histÃ³rico de chat sempre que a pÃ¡gina Ã© acessada
    if request.method == 'GET':
        chat_history = [
            "ðŸ¤– Emabot: OlÃ¡, me chamo Emaboot da Diplan, qual seu nome?"
        ]

    if request.method == 'POST':
        user_input = request.form['user_input']

        if len(chat_history) == 1:
            # Primeira resposta do usuÃ¡rio (Nome)
            user_name = user_input
            chat_history.append(f"{face_emoji}: {user_input}")
            chat_history.append("ðŸ¤– Emabot: Qual seu setor?")
        elif len(chat_history) == 3:
            # Segunda resposta do usuÃ¡rio (Setor)
            user_sector = user_input
            chat_history.append(f"{face_emoji}: {user_input}")
            chat_history.append(f"ðŸ¤– Emabot: Obrigado, {user_name}, do setor {user_sector}. Sou sua assistente de busca... Como posso ajudar? Fale comigo somente por palavras-chave. Exemplo: Processos..")
        else:
            # Respostas subsequentes (Busca)
            chat_history.append(f"{face_emoji}: {user_input}")
            results = search_in_spreadsheet(user_input)
            if results:
                chat_history.append("ðŸ¤– Emabot: Documentos encontrados:")
                for result in results:
                    chat_history.append(f"ðŸ“„ <a href='/get_link?title={result['TÃ­tulo do documento']}'> {result['TÃ­tulo do documento']}</a>")
            else:
                chat_history.append("ðŸ¤– Emabot: Nenhum documento encontrado com essas palavras-chave.")

    return render_template_string('''
        <div style="display: flex;">
            <div style="width: 70%;">
                <h1>Emabot da Diplan</h1>
                <div style="border:1px solid #ccc; padding:10px; margin-bottom:10px;">
                    {% for message in chat_history %}
                        <p>{{ message | safe }}</p>
                    {% endfor %}
                </div>
                <form method="post" action="/">
                    <label for="user_input">Digite sua mensagem:</label><br>
                    <input type="text" id="user_input" name="user_input" style="width:80%">
                    <input type="submit" value="Enviar">
                </form>
            </div>
            <div style="width: 30%; text-align: center;">
                <img src="/static/images/your_image_name.png" alt="Diplan Assistant" style="width: 100%;">
            </div>
        </div>
    ''', chat_history=chat_history)

@app.route('/get_link', methods=['GET'])
def get_link():
    global chat_history  # Certifique-se de que o histÃ³rico de chat seja acessÃ­vel
    title = request.args.get('title')
    result = df[df['TÃ­tulo do documento'] == title]
    if not result.empty:
        link = result['Link Qualyteam'].values[0]
        resumo = result['Resumo'].values[0]
        chat_history.append(f"ðŸ¤– Emabot: Aqui estÃ¡ o link para '{title}': <a href='{link}' target='_blank'>{link}</a>")
        chat_history.append(f"ðŸ“„ Resumo: {resumo}")
    else:
        chat_history.append("ðŸ¤– Emabot: Link nÃ£o encontrado para o tÃ­tulo selecionado.")
    
    # Renderiza a mesma pÃ¡gina inicial para permitir novas interaÃ§Ãµes sem reiniciar a conversa
    return render_template_string('''
        <div style="display: flex;">
            <div style="width: 70%;">
                <h1>Emabot da Diplan</h1>
                <div style="border:1px solid #ccc; padding:10px; margin-bottom:10px;">
                    {% for message in chat_history %}
                        <p>{{ message | safe }}</p>
                    {% endfor %}
                </div>
                <form method="post" action="/">
                    <label for="user_input">Digite sua mensagem:</label><br>
                    <input type="text" id="user_input" name="user_input" style="width:80%">
                    <input type="submit" value="Enviar">
                </form>
            </div>
            <div style="width: 30%; text-align: center;">
                <img src="/static/images/your_image_name.png" alt="Diplan Assistant" style="width: 100%;">
            </div>
        </div>
    ''', chat_history=chat_history)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))


